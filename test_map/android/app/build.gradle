plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1' // 기본값
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0' // 기본값
}

android {
    // !!! 중요: 네이버 클라우드 플랫폼에 등록할 패키지 이름과 일치해야 합니다. !!!
    // 사용자님께서 'com.example.test_map'을 사용하신다고 하셨습니다.
    namespace "com.example.test_map"
    compileSdk flutter.compileSdkVersion // Flutter에서 권장하는 compileSdk 버전 사용
    ndkVersion flutter.ndkVersion     // Flutter에서 권장하는 ndk 버전 사용

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8' // 또는 프로젝트에서 사용하는 Kotlin JVM 타겟 버전
    }

    defaultConfig {
        // !!! 중요: 네이버 클라우드 플랫폼에 등록할 패키지 이름과 일치해야 합니다. !!!
        // namespace와 동일하게 설정하는 것이 일반적입니다.
        applicationId "com.example.test_map"

        // flutter_naver_map 플러그인이 요구하는 최소 SDK 버전을 설정합니다.
        // 플러그인 문서를 확인하여 적절한 버전을 설정하세요 (예: 21 또는 23).
        minSdk 23 // 예시, 실제 플러그인 요구사항 확인 필요 (또는 flutter.minSdkVersion 사용 가능)
        targetSdk flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    // 필요한 경우 여기에 다른 의존성을 추가합니다.
    // 예: implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

// 주요 확인 사항:
// 1. `android` 블록 내의 `namespace`가 `com.example.test_map`으로 설정되었는지 확인합니다.
// 2. `defaultConfig` 블록 내의 `applicationId`가 `com.example.test_map`으로 설정되었는지 확인합니다.
//    이 값은 NCP 콘솔에 등록하는 "Android 앱 패키지 이름"과 정확히 일치해야 합니다.
// 3. `minSdk` 버전이 `flutter_naver_map` 플러그인의 요구사항을 충족하는지 확인합니다.
